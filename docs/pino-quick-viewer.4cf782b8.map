{"version":3,"sources":["pino-quick-viewer/index.js"],"names":["transFromPinoJson","json","obj","JSON","parse","msg","idx","indexOf","txt","substring","replace","err","Form","React","Component","constructor","props","state","text","renderTarget","level","time","onChange","bind","onClick","e","setState","target","value","data","Date","toString","render","margin","width","height","backgroundColor","document","addEventListener","ReactDOM","querySelector"],"mappings":";;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,oBAAqBC,IAAD,IAAU;AAClC,MAAI;AACF,UAAMC,MAAMC,KAAKC,KAAL,CAAWH,IAAX,CAAZ;AACA,UAAMI,MAAM,sBAAIH,GAAJ,EAAS,KAAT,EAAgB,IAAhB,CAAZ;AACA,UAAMI,MAAMD,IAAIE,OAAJ,CAAY,GAAZ,CAAZ;AACA,UAAMC,MAAMH,IAAII,SAAJ,CAAc,CAAd,EAAiBH,GAAjB,CAAZ;AACA,WAAOH,KAAKC,KAAL,CAAWC,IAAIK,OAAJ,CAAYF,GAAZ,EAAiB,EAAjB,CAAX,CAAP;AACD,GAND,CAME,OAAOG,GAAP,EAAY;AACZ,UAAMT,MAAMC,KAAKC,KAAL,CAAWH,IAAX,CAAZ;AACA,UAAMI,MAAM,sBAAIH,GAAJ,EAAS,KAAT,EAAgB,IAAhB,CAAZ;AACA,WAAOG,GAAP;AACD;AACF,CAZD;;AAcA,MAAMO,IAAN,SAAmBC,gBAAMC,SAAzB,CAAmC;AACjCC,cAAYC,KAAZ,EAAmB;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,YAAM,EADK;AAEXC,oBAAc,IAFH;AAGXC,aAAO,IAHI;AAIXC,YAAM;AAJK,KAAb;AAMA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDD,WAASG,CAAT,EAAY;AACV,SAAKC,QAAL,CAAc,EAAER,MAAMO,EAAEE,MAAF,CAASC,KAAjB,EAAd;AACD;;AAEDJ,YAAU;AACR,UAAMK,OAAO1B,KAAKC,KAAL,CAAW,KAAKa,KAAL,CAAWC,IAAtB,CAAb;AACA,UAAMhB,MAAMF,kBAAkB,KAAKiB,KAAL,CAAWC,IAA7B,CAAZ;AACA,SAAKQ,QAAL,CAAc;AACZN,aAAOS,KAAKT,KADA;AAEZC,YAAM,IAAIS,IAAJ,CAASD,KAAKR,IAAd,EAAoBU,QAApB,EAFM;AAGZZ,oBAAcjB,GAHF;AAIZgB,YAAM;AAJM,KAAd;AAMD;;AAEDc,WAAS;AACP,WACE;AAAC,qBAAD,CAAO,QAAP;AAAA;AACE;AACE,kBAAU,KAAKV,QADjB;AAEE,eAAO,KAAKL,KAAL,CAAWC,IAFpB;AAGE,eAAO;AACLe,kBAAQ,MADH;AAELC,iBAAO,KAFF;AAGLC,kBAAQ;AAHH;AAHT,QADF;AAUE;AAAA;AAAA;AACE,iBAAO;AACLC,6BAAiB,MADZ;AAELF,mBAAO,OAFF;AAGLC,oBAAQ;AAHH,WADT;AAME,mBAAS,KAAKX;AANhB;AAAA;AAAA,OAVF;AAoBE,+CApBF;AAqBE;AAAA;AAAA;AAAA;AAAS,aAAKP,KAAL,CAAWG,KAAX,IAAoB;AAA7B,OArBF;AAsBE;AAAA;AAAA;AAAA;AAAQ,aAAKH,KAAL,CAAWI;AAAnB,OAtBF;AAuBE,oCAAC,8BAAD,IAAiB,MAAM,KAAKJ,KAAL,CAAWE,YAAlC;AAvBF,KADF;AA2BD;AAxDgC;;AA2DnCkB,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAClDC,qBAASP,MAAT,CACE,8BAAC,IAAD,OADF,EAEEK,SAASG,aAAT,CAAuB,OAAvB,CAFF;AAID,CALD","file":"pino-quick-viewer.4cf782b8.map","sourceRoot":"../..","sourcesContent":["import React from 'react'\nimport get from 'lodash.get'\nimport ReactDOM from 'react-dom'\nimport ObjectInspector from 'react-object-inspector'\n\nconst transFromPinoJson = (json) => {\n  try {\n    const obj = JSON.parse(json)\n    const msg = get(obj, 'msg', '{}')\n    const idx = msg.indexOf('{')\n    const txt = msg.substring(0, idx)\n    return JSON.parse(msg.replace(txt, ''))\n  } catch (err) {\n    const obj = JSON.parse(json)\n    const msg = get(obj, 'msg', '{}')\n    return msg\n  }\n}\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: '',\n      renderTarget: '{}',\n      level: null,\n      time: null,\n    }\n    this.onChange = this.onChange.bind(this)\n    this.onClick = this.onClick.bind(this)\n  }\n\n  onChange(e) {\n    this.setState({ text: e.target.value })\n  }\n\n  onClick() {\n    const data = JSON.parse(this.state.text)\n    const obj = transFromPinoJson(this.state.text)\n    this.setState({\n      level: data.level,\n      time: new Date(data.time).toString(),\n      renderTarget: obj,\n      text: '{}',\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <textarea\n          onChange={this.onChange}\n          value={this.state.text}\n          style={{\n            margin: '40px',\n            width: '80%',\n            height: '100px',\n          }}\n        />\n        <button\n          style={{\n            backgroundColor: 'cyan',\n            width: '100px',\n            height: '30px',\n          }}\n          onClick={this.onClick}\n        >\n          更新\n        </button>\n        <hr />\n        <h3>レベル:{this.state.level || ''}</h3>\n        <h3>日付:{this.state.time}</h3>\n        <ObjectInspector data={this.state.renderTarget} />\n      </React.Fragment>\n    )\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <Form />,\n    document.querySelector('#root')\n  )\n})\n\n"]}